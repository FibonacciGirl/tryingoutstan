}
y
model_data<-list(list(y=y,
J=n.subjects
))
model_data
fit <- stan(file = 'hierarchical_test.stan', data = model_data, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
model_data1<-list(list(y=y,
J=n.subjects
))
fit <- stan(file = 'hierarchical_test.stan', data = model_data1, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
model_data<-list(list(y=y,
J=n.subjects
))
fit <- stan(file = 'hierarchical_test.stan', data = model_data, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
model_data<-list(list(
J=n.subjects,K=n.trials,y=y
))
fit <- stan(file = 'hierarchical_test.stan', data = model_data, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
n.subjects=100
n.data =1000
mu_mean0 = 80
mu_meansd= 10
a=16
b=2
mu_mean<-rnorm(1,mu_mean0,mu_meansd)
mu_sd<-rgamma(1,a,b)
mu<-rnorm(n.subjects,mu_mean,mu_sd)
sd<-rgamma(n.subjects, a, b)
y<-array(dim=c(n.subjects,n.data))
for(i in 1:n.subjects){
y[i,]<-rnorm(n.data,mu[i],sd[i])
}
y
model_data<-list(list(
J=n.subjects,K=n.trials,y=y
))
fit <- stan(file = 'hierarchical_test.stan', data = model_data, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
model_data<-list(list(
J=n.subjects,K=n.trials,y=y
))
model_data
fit <- stan(file = 'hierarchical_test.stan', data = model_data, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
model_data[[1]]$K
model_data<-list(list(
J=n.subjects,K=n.data,y=y
))
model_data[[1]]$K
fit <- stan(file = 'hierarchical_test.stan', data = model_data, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'hierarchical_test.stan', data = model_data, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'hierarchical_test.stan', data = model_data, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
model_data<-list(list(
J=n.subjects,K=n.data,y=y))
model_data[[1]]$J
model_data[[1]]$y
fit <- stan(file = 'hierarchical_test.stan', data = model_data, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'hierarchical_test.stan', data = model_data, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
model_data<-list(list(
J=n.subjects,K=n.data,y=y))
fit <- stan(file = 'hierarchical_test.stan', data = model_data, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
library(rstan)
n.subjects=100
n.data =1000
mu_mean0 = 80
mu_meansd= 10
a=16
b=2
mu_mean<-rnorm(1,mu_mean0,mu_meansd)
mu_sd<-rgamma(1,a,b)
mu<-rnorm(n.subjects,mu_mean,mu_sd)
sd<-rgamma(n.subjects, a, b)
y<-array(dim=c(n.subjects,n.data))
for(i in 1:n.subjects){
y[i,]<-rnorm(n.data,mu[i],sd[i])
}
y
model_data<-list(list(
J=n.subjects,K=n.data,y=y))
model_data[[1]]$y
fit <- stan(file = 'hierarchical_test.stan', data = model_data, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
model_data<-list(list(
J=n.subjects,I=n.data,y=y))
model_data[[1]]$y
fit <- stan(file = 'hierarchical_test.stan', data = model_data, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'hierarchical_test.stan', data = model_data, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
model_data<-list(list(
J=n.subjects,y=y))
model_data[[1]]$y
fit <- stan(file = 'hierarchical_test.stan', data = model_data, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
model_data<-list(list(
J=100,y=y))
model_data[[1]]$y
fit <- stan(file = 'hierarchical_test.stan', data = model_data, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
model_data[[1]]$J
fit <- stan(file = 'hierarchical_test.stan', data = model_data, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
model_data.1<-list(list(
J=100,y=y))
fit <- stan(file = 'hierarchical_test.stan', data = model_data.1, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
remove(model_data)
fit <- stan(file = 'hierarchical_test.stan', data = model_data.1, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'hierarchical_test.stan', data = model_data, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
model_data<-list(list(
J=100,y=y))
fit <- stan(file = 'hierarchical_test.stan', data = model_data, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
model_data[[1]]$J
fit <- stan(file = 'hierarchical_test.stan', data = model_data, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'hierarchical_test.stan', data = model_data, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
model_data<-list(list(
I=100,y=y))
model_data[[1]]$J
fit <- stan(file = 'hierarchical_test.stan', data = model_data, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'hierarchical_test.stan', data = model_data, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'hierarchical_test.stan', data = model_data, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'hierarchical_test.stan', data = model_data, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
model_data<-list(list(
I=100,y=y))
model_data[[1]]$J
fit <- stan(file = 'hierarchical_test.stan', data = model_data, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
model_data_test<-list(list(
I=100,y=y))
fit <- stan(file = 'hierarchical_test.stan', data = model_data_test, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
model_data[[1]]$I
model_data_test<-list(list(
y=y))
fit <- stan(file = 'hierarchical_test.stan', data = model_data_test, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
print(fit)
print(fit,par=c('mu_mean'))
fit <- stan(file = 'hierarchical_test_2.stan', data = model_data_test, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'hierarchical_test_2.stan', data = model_data_test, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'hierarchical_test_2.stan', data = model_data_test, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'hierarchical_test_2.stan', data = model_data_test, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'hierarchical_test_2.stan', data = model_data_test, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'hierarchical_test_2.stan', data = model_data_test, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'hierarchical_test_2.stan', data = model_data_test, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'hierarchical_test_2.stan', data = model_data_test, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'hierarchical_test_2.stan', data = model_data_test, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
model_data_breakpoint<-list(list(Tr= 150, y=c(rnorm(100,80,10),rnorm(50,-60,10))))
fit <- stan(file = 'breakpoint_test.stan', data = model_data_breakpoint, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
library(rstan)
fit <- stan(file = 'breakpoint_test.stan', data = model_data_breakpoint, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'hierarchical_test.stan', data = model_data_test, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'hierarchical_test_2.stan', data = model_data_test, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
library(rstan)
fit <- stan(file = 'hierarchical_test_2.stan', data = model_data_test, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'hierarchical_test_2.stan', data = model_data_test, iter = 10000,warmup =1000 ,
chains = 1, verbose = F )
fit <- stan(file = 'hierarchical_test_2.stan', data = model_data_test, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'hierarchical_test_2.stan', data = model_data_test, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'hierarchical_test_2.stan', data = model_data_test, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
model_data_breakpoint<-list(list(Tr= 150, y=c(rnorm(100,80,10),rnorm(50,-60,10))))
fit <- stan(file = 'breakpoint_test.stan', data = model_data_breakpoint, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'breakpoint_test.stan', data = model_data_breakpoint, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'breakpoint_test.stan', data = model_data_breakpoint, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
model_data_breakpoint<-list(list(Tr= 150, y=c(rnorm(100,80,10),rnorm(50,-60,10))))
fit <- stan(file = 'breakpoint_test.stan', data = model_data_breakpoint, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'hierarchical_test_2.stan', data = model_data_test, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'hierarchical_test_2.stan', data = model_data_test, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'hierarchical_test_2.stan', data = model_data_test, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
remove(J)
remove(Tr)
n.subjects=100
n.data =1000
mu_mean0 = 80
mu_meansd= 10
a=16
b=2
mu_mean<-rnorm(1,mu_mean0,mu_meansd)
mu_sd<-rgamma(1,a,b)
mu<-rnorm(n.subjects,mu_mean,mu_sd)
sd<-rgamma(n.subjects, a, b)
y<-array(dim=c(n.subjects,n.data))
for(i in 1:n.subjects){
y[i,]<-rnorm(n.data,mu[i],sd[i])
}
y
model_data_test<-list(list(J=100, Tr = 1000,
y=y))
library(rstan)
fit <- stan(file = 'hierarchical_test.stan', data = model_data_test, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
model_data_test<-list(list(J = 100, Tr = 1000,
y=y))
model_data[[1]]$J
model_data_test[[1]]$J
fit <- stan(file = 'hierarchical_test.stan', data = model_data_test, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
model_data_test<-list(list(J = c(100), Tr = c(1000),
y=y))
fit <- stan(file = 'hierarchical_test.stan', data = model_data_test, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
model_data_test[[1]]$J
fit <- stan(file = 'hierarchical_test.stan', data = model_data_test, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'hierarchical_test.stan', data = model_data_test, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
model_data_test<-list(list('J' = c(100), 'Tr' = c(1000),
'y'=y))
model_data_test[[1]]$J
fit <- stan(file = 'hierarchical_test.stan', data = model_data_test, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'hierarchical_test.stan', data = model_data_test, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
model_data_test<-list(list('J' = 100, 'Tr' = 1000,
'y'=y))
fit <- stan(file = 'hierarchical_test.stan', data = model_data_test, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'hierarchical_test.stan', data = model_data_test, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
model_data_test[[1]]$J
model_data_test<-list(list('J' = 100, 'Tr' = 1000,
'y'=y))
model_data_test[[1]]$J
model_data_test<-list(list('J' = 100, 'Tr' = 1000,
'y'=y))
fit <- stan(file = 'hierarchical_test.stan', data = model_data_test, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
J=n.subjects
Tr=n.data
model_data_test<-list(list('J' = J, 'Tr' = Tr,
'y'=y))
fit <- stan(file = 'hierarchical_test.stan', data = model_data_test, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'hierarchical_test_2.stan', data = model_data_test, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'hierarchical_test_2.stan', data = model_data_test, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
Tr=150
y=c(rnorm(100,80,10),rnorm(50,-60,10))
model_data_breakpoint<-list(list(Tr= Tr, y=y ))
fit <- stan(file = 'breakpoint_test.stan', data = model_data_breakpoint, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'breakpoint_test.stan', data = model_data_breakpoint, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'breakpoint_test.stan', data = model_data_breakpoint, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'breakpoint_test.stan', data = model_data_breakpoint, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
print(fit)
print(fit, pars = c('s'))
print(fit, pars = c('mu1'))
print(fit, pars = c('mu2'))
fit <- stan(file = 'breakpoint_test.stan', data = model_data_breakpoint, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
print(fit, pars = c('mu2'))
print(fit, pars = c('mu1'))
fit <- stan(file = 'hierarchical_test_2.stan', data = model_data_test, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
J=n.subjects
Tr=n.data
model_data_test<-list(list('J' = J, 'Tr' = Tr,
'y'=y))
fit <- stan(file = 'hierarchical_test_2.stan', data = model_data_test, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
n.subjects=100
n.data =1000
J=n.subjects
Tr=n.data
mu_mean0 = 80
mu_meansd= 10
a=16
b=2
mu_mean<-rnorm(1,mu_mean0,mu_meansd)
mu_sd<-rgamma(1,a,b)
mu<-rnorm(n.subjects,mu_mean,mu_sd)
sd<-rgamma(n.subjects, a, b)
y<-array(dim=c(n.subjects,n.data))
for(i in 1:n.subjects){
y[i,]<-rnorm(n.data,mu[i],sd[i])
}
y
J=n.subjects
Tr=n.data
model_data_test<-list(list('J' = J, 'Tr' = Tr,
'y'=y))
fit <- stan(file = 'hierarchical_test.stan', data = model_data_test, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
print(fit,par=c('mu_mean'))
print(fit,par=c('mu_sd'))
linear.model<- function(t,params){
a<-params[1]; b<-params[2]; c<-params[3]
rtu<-mapply(function(x,a){
rtu=a
return(rtu)
},t,MoreArgs= list(a))
rtp<-mapply(function(x,b,c){
rl=b + c*x
return(rl)
},t,MoreArgs= list(b,c))
rt_data<-data.frame(rtu=rtu,rtp=rtp)
return(rt_data)
}
constant.model<- function(t,params){
a<-params[1]; b<-params[2];
rtu<-mapply(function(x,a){
rtu=a
return(rtu)
},t,MoreArgs= list(a))
rtp<-mapply(function(x,b){
rl=b
return(rl)
},t,MoreArgs= list(b))
rt_data<-data.frame(rtu=rtu,rtp=rtp)
return(rt_data)
}
linear.params<-array(dim=c(n.subjects,3))
constant.params<-array(dim=c(n.subjects,2))
t<-1:72
n.trials<-length(t)
n.subjects<-100
theta<-rbeta(n.subjects,.5,.5)
sigma<-rgamma(n.subjects,9,.4)
theta
rtu<-array(dim=c(n.subjects,n.trials))
rtp<-array(dim=c(n.subjects,n.trials))
for(i in 1:n.subjects){
linear.params[i,]<-c(rnorm(1,400,50), rnorm(1,800,50), rnorm(1,-15,2.5))
constant.params[i,]<-c(rnorm(1,400,50), rnorm(1,-400,50))
rtu[i,]<-constant.model(t,constant.params)$rtu + rnorm(n.trials,0,sigma[i])
rtp[i,]<-theta[i]*linear.model(t,linear.params)$rtp + (1-theta[i])*constant.model(t,constant.params)$rtp + rnorm(n.trials,0,sigma[i])
}
gammaShRaFromModeSD(10,2)
J=n.subjects
Tr=n.trials
model_data<-list(J=J,
Tr=Tr,
rtu=rtu,
rtp=rtp)
fit <- stan(file = 'STAN_model_hier.stan', data = model_data, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'STAN_model_hier.stan', data = model_data, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'STAN_model_hier.stan', data = model_data, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'STAN_model_hier.stan', data = model_data, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
for(i in 1:n.subjects){
linear.params[i,]<-c(rnorm(1,400,50), rnorm(1,800,50), rnorm(1,-15,2.5))
constant.params[i,]<-c(rnorm(1,400,50), rnorm(1,-400,50))
rtu[i,]<-constant.model(t,constant.params)$rtu + rnorm(n.trials,0,sigma[i])
rtp[i,]<-theta[i]*linear.model(t,linear.params)$rtp + (1-theta[i])*constant.model(t,constant.params)$rtp + rnorm(n.trials,0,sigma[i])
}
rtp
rtu
model_data<-list(J=J,
Tr=Tr,
rtu=rtu,
rtp=rtp)
fit <- stan(file = 'STAN_model_hier.stan', data = model_data, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
plot(fit,par=c('theta'))
theta[4]
plot(fit,par=c('theta[4]'))
theta[4]
plot(fit,par=c('p_slope[4]'))
for(i in 1:n.subjects){
linear.params[i,]<-c(rnorm(1,400,50), rnorm(1,800,50), rnorm(1,-15,2.5))
constant.params[i,]<-c(rnorm(1,400,50), rnorm(1,-400,50))
rtu[i,]<-constant.model(t,constant.params[i,])$rtu + rnorm(n.trials,0,sigma[i])
rtp[i,]<-theta[i]*linear.model(t,linear.params[i,])$rtp + (1-theta[i])*constant.model(t,constant.params[i,])$rtp + rnorm(n.trials,0,sigma[i])
}
rtu
linear.params[2,]
linear.params<-array(dim=c(n.subjects,3))
constant.params<-array(dim=c(n.subjects,2))
t<-1:72
n.trials<-length(t)
n.subjects<-100
theta<-rbeta(n.subjects,.5,.5)
sigma<-rgamma(n.subjects,9,.4)
theta
rtu<-array(dim=c(n.subjects,n.trials))
rtp<-array(dim=c(n.subjects,n.trials))
for(i in 1:n.subjects){
linear.params[i,]<-c(rnorm(1,400,50), rnorm(1,800,50), rnorm(1,-15,2.5))
constant.params[i,]<-c(rnorm(1,400,50), rnorm(1,-400,50))
rtu[i,]<-constant.model(t,constant.params[i,])$rtu + rnorm(n.trials,0,sigma[i])
rtp[i,]<-theta[i]*linear.model(t,linear.params[i,])$rtp + (1-theta[i])*constant.model(t,constant.params[i,])$rtp + rnorm(n.trials,0,sigma[i])
}
J=n.subjects
Tr=n.trials
model_data<-list(J=J,
Tr=Tr,
rtu=rtu,
rtp=rtp)
fit <- stan(file = 'STAN_model_hier.stan', data = model_data, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
library(rstan)
K=2
I=100
mu=c(-100,200)
sigma=c(10,30)
z<-numeric(I)
y=numeric(I)
for(i in 1:I){
z[i]<- rbinom(1,1,.8)
y[i]= rnorm(1,mu[(1+z[i])],sigma[(1+z[i])])
}
y
model_data_indicator<-list(list(K=K,I=I,y=y,alpha=c(1,1),mu0=c(0,0),sigma=c(100,100)))
fit <- stan(file = 'discrete_indicator_test.stan', data = model_data_indicator, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'discrete_indicator_test.stan', data = model_data_indicator, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'discrete_indicator_test.stan', data = model_data_indicator, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'discrete_indicator_test.stan', data = model_data_indicator, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
fit <- stan(file = 'discrete_indicator_test.stan', data = model_data_indicator, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
alpha=c(1,1)
mu0=c(0,0)
sigma=c(100,100)
model_data_indicator<-list(list(K=K,I=I,y=y,alpha=alpha,mu0=mu0,sigma0=sigma0))
fit <- stan(file = 'discrete_indicator_test.stan', data = model_data_indicator, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
alpha=c(1,1)
mu0=c(0,0)
sigma0=c(100,100)
model_data_indicator<-list(list(K=K,I=I,y=y,alpha=alpha,mu0=mu0,sigma0=sigma0))
fit <- stan(file = 'discrete_indicator_test.stan', data = model_data_indicator, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
sigma0=c(100,100)
model_data_indicator<-list(list(K=K,I=I,y=y,alpha=alpha,mu0=mu0,sigma0=sigma0))
fit <- stan(file = 'discrete_indicator_test.stan', data = model_data_indicator, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
sigma0=100
model_data_indicator<-list(list(K=K,I=I,y=y,alpha=alpha,mu0=mu0,sigma0=sigma0))
fit <- stan(file = 'discrete_indicator_test.stan', data = model_data_indicator, iter = 10000,warmup =1000 ,
chains = 1, verbose = T )
plot(fit, par=c('mu'))
plot(fit, par=c('sigma'))
plot(fit, par=c('log_q_z'))
plot(fit, par=c('log_q_z[,2]'))
plot(fit, par=c('log_q_z[1]'))
plot(fit, par=c('log_q_z[,]'))
plot(fit, par=c('log_q_z'))
plot(fit, par=c('log_q_z[100,2]'))
plot(fit, par=c('log_q_z[100,1]'))
plot(fit, par=c('log_q_z[100,2]'))
log(-12)
exp(-13)
exp(-600)
z[100]
plot(fit, par=c('log_q_z[100,2]'))
plot(fit, par=c('log_q_z[100,1]'))
plot(fit, par=c('log_q_z[99,1]'))
plot(fit, par=c('log_q_z[99,2]'))
plot(fit, par=c('log_q_z[99,]'))
fit$
fit$`log_q_z[1,1]`
fit$log_q_z[1,1]
print(fit,log_q_z[1,1])
plot(fit, par=c('log_q_z[99,1]','log_q_z[99,2]'))
z[99]
plot(fit, par=c('log_q_z[99,1]','log_q_z[99,3]'))
z
plot(fit, par=c('log_q_z[2,1]','log_q_z[2,2]'))
